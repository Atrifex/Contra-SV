--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 14.1 cbx_cycloneii 2014:12:03:18:04:04:SJ cbx_lpm_add_sub 2014:12:03:18:04:04:SJ cbx_lpm_compare 2014:12:03:18:04:04:SJ cbx_lpm_decode 2014:12:03:18:04:04:SJ cbx_mgl 2014:12:03:18:06:09:SJ cbx_stratix 2014:12:03:18:04:04:SJ cbx_stratixii 2014:12:03:18:04:04:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode558w[1..0]	: WIRE;
	w_anode567w[3..0]	: WIRE;
	w_anode584w[3..0]	: WIRE;
	w_anode594w[3..0]	: WIRE;
	w_anode604w[3..0]	: WIRE;
	w_anode614w[3..0]	: WIRE;
	w_anode624w[3..0]	: WIRE;
	w_anode634w[3..0]	: WIRE;
	w_anode644w[3..0]	: WIRE;
	w_anode656w[1..0]	: WIRE;
	w_anode663w[3..0]	: WIRE;
	w_anode674w[3..0]	: WIRE;
	w_anode684w[3..0]	: WIRE;
	w_anode694w[3..0]	: WIRE;
	w_anode704w[3..0]	: WIRE;
	w_anode714w[3..0]	: WIRE;
	w_anode724w[3..0]	: WIRE;
	w_anode734w[3..0]	: WIRE;
	w_data556w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode734w[3..3], w_anode724w[3..3], w_anode714w[3..3], w_anode704w[3..3], w_anode694w[3..3], w_anode684w[3..3], w_anode674w[3..3], w_anode663w[3..3]), ( w_anode644w[3..3], w_anode634w[3..3], w_anode624w[3..3], w_anode614w[3..3], w_anode604w[3..3], w_anode594w[3..3], w_anode584w[3..3], w_anode567w[3..3]));
	w_anode558w[] = ( (w_anode558w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode567w[] = ( (w_anode567w[2..2] & (! w_data556w[2..2])), (w_anode567w[1..1] & (! w_data556w[1..1])), (w_anode567w[0..0] & (! w_data556w[0..0])), w_anode558w[1..1]);
	w_anode584w[] = ( (w_anode584w[2..2] & (! w_data556w[2..2])), (w_anode584w[1..1] & (! w_data556w[1..1])), (w_anode584w[0..0] & w_data556w[0..0]), w_anode558w[1..1]);
	w_anode594w[] = ( (w_anode594w[2..2] & (! w_data556w[2..2])), (w_anode594w[1..1] & w_data556w[1..1]), (w_anode594w[0..0] & (! w_data556w[0..0])), w_anode558w[1..1]);
	w_anode604w[] = ( (w_anode604w[2..2] & (! w_data556w[2..2])), (w_anode604w[1..1] & w_data556w[1..1]), (w_anode604w[0..0] & w_data556w[0..0]), w_anode558w[1..1]);
	w_anode614w[] = ( (w_anode614w[2..2] & w_data556w[2..2]), (w_anode614w[1..1] & (! w_data556w[1..1])), (w_anode614w[0..0] & (! w_data556w[0..0])), w_anode558w[1..1]);
	w_anode624w[] = ( (w_anode624w[2..2] & w_data556w[2..2]), (w_anode624w[1..1] & (! w_data556w[1..1])), (w_anode624w[0..0] & w_data556w[0..0]), w_anode558w[1..1]);
	w_anode634w[] = ( (w_anode634w[2..2] & w_data556w[2..2]), (w_anode634w[1..1] & w_data556w[1..1]), (w_anode634w[0..0] & (! w_data556w[0..0])), w_anode558w[1..1]);
	w_anode644w[] = ( (w_anode644w[2..2] & w_data556w[2..2]), (w_anode644w[1..1] & w_data556w[1..1]), (w_anode644w[0..0] & w_data556w[0..0]), w_anode558w[1..1]);
	w_anode656w[] = ( (w_anode656w[0..0] & data_wire[3..3]), enable_wire);
	w_anode663w[] = ( (w_anode663w[2..2] & (! w_data556w[2..2])), (w_anode663w[1..1] & (! w_data556w[1..1])), (w_anode663w[0..0] & (! w_data556w[0..0])), w_anode656w[1..1]);
	w_anode674w[] = ( (w_anode674w[2..2] & (! w_data556w[2..2])), (w_anode674w[1..1] & (! w_data556w[1..1])), (w_anode674w[0..0] & w_data556w[0..0]), w_anode656w[1..1]);
	w_anode684w[] = ( (w_anode684w[2..2] & (! w_data556w[2..2])), (w_anode684w[1..1] & w_data556w[1..1]), (w_anode684w[0..0] & (! w_data556w[0..0])), w_anode656w[1..1]);
	w_anode694w[] = ( (w_anode694w[2..2] & (! w_data556w[2..2])), (w_anode694w[1..1] & w_data556w[1..1]), (w_anode694w[0..0] & w_data556w[0..0]), w_anode656w[1..1]);
	w_anode704w[] = ( (w_anode704w[2..2] & w_data556w[2..2]), (w_anode704w[1..1] & (! w_data556w[1..1])), (w_anode704w[0..0] & (! w_data556w[0..0])), w_anode656w[1..1]);
	w_anode714w[] = ( (w_anode714w[2..2] & w_data556w[2..2]), (w_anode714w[1..1] & (! w_data556w[1..1])), (w_anode714w[0..0] & w_data556w[0..0]), w_anode656w[1..1]);
	w_anode724w[] = ( (w_anode724w[2..2] & w_data556w[2..2]), (w_anode724w[1..1] & w_data556w[1..1]), (w_anode724w[0..0] & (! w_data556w[0..0])), w_anode656w[1..1]);
	w_anode734w[] = ( (w_anode734w[2..2] & w_data556w[2..2]), (w_anode734w[1..1] & w_data556w[1..1]), (w_anode734w[0..0] & w_data556w[0..0]), w_anode656w[1..1]);
	w_data556w[2..0] = data_wire[2..0];
END;
--VALID FILE
